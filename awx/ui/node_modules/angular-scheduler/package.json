{
  "_args": [
    [
      {
        "raw": "angular-scheduler@git+https://git@github.com/ansible/angular-scheduler.git#v0.3.2",
        "scope": null,
        "escapedName": "angular-scheduler",
        "name": "angular-scheduler",
        "rawSpec": "git+https://git@github.com/ansible/angular-scheduler.git#v0.3.2",
        "spec": "git+https://git@github.com/ansible/angular-scheduler.git#v0.3.2",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:ansible/angular-scheduler.git#v0.3.2",
          "sshUrl": "git+ssh://git@github.com/ansible/angular-scheduler.git#v0.3.2",
          "httpsUrl": "git+https://git@github.com/ansible/angular-scheduler.git#v0.3.2",
          "gitUrl": "git://git@github.com/ansible/angular-scheduler.git#v0.3.2",
          "shortcut": "github:ansible/angular-scheduler#v0.3.2",
          "directUrl": "https://git@raw.githubusercontent.com/ansible/angular-scheduler/v0.3.2/package.json"
        }
      },
      "/awx/awx/ui"
    ]
  ],
  "_from": "git+https://git@github.com/ansible/angular-scheduler.git#v0.3.2",
  "_id": "angular-scheduler@0.3.2",
  "_inCache": true,
  "_location": "/angular-scheduler",
  "_phantomChildren": {
    "angular": "1.6.10",
    "angular-filters": "1.1.2",
    "jstimezonedetect": "1.0.5",
    "timezone-js": "0.4.14"
  },
  "_requested": {
    "raw": "angular-scheduler@git+https://git@github.com/ansible/angular-scheduler.git#v0.3.2",
    "scope": null,
    "escapedName": "angular-scheduler",
    "name": "angular-scheduler",
    "rawSpec": "git+https://git@github.com/ansible/angular-scheduler.git#v0.3.2",
    "spec": "git+https://git@github.com/ansible/angular-scheduler.git#v0.3.2",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:ansible/angular-scheduler.git#v0.3.2",
      "sshUrl": "git+ssh://git@github.com/ansible/angular-scheduler.git#v0.3.2",
      "httpsUrl": "git+https://git@github.com/ansible/angular-scheduler.git#v0.3.2",
      "gitUrl": "git://git@github.com/ansible/angular-scheduler.git#v0.3.2",
      "shortcut": "github:ansible/angular-scheduler#v0.3.2",
      "directUrl": "https://git@raw.githubusercontent.com/ansible/angular-scheduler/v0.3.2/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://git@github.com/ansible/angular-scheduler.git#5d9ad6021d63aa9faa07842a436f411f5979b529",
  "_shasum": "f60daa4f044a69b14f0b9d3b1fb2aedd695515a7",
  "_shrinkwrap": null,
  "_spec": "angular-scheduler@git+https://git@github.com/ansible/angular-scheduler.git#v0.3.2",
  "_where": "/awx/awx/ui",
  "dependencies": {
    "angular": "~1.6.6",
    "angular-tz-extensions": "github:ansible/angular-tz-extensions",
    "jquery": "*",
    "jquery-ui": "*",
    "lodash": "~3.8.0",
    "moment": "^2.10.2",
    "rrule": "github:jkbrzt/rrule#4ff63b2f8524fd6d5ba6e80db770953b5cd08a0c"
  },
  "description": "angular-scheduler =================",
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-jshint": "~0.6.3",
    "grunt-contrib-less": "~0.9.0",
    "grunt-contrib-uglify": "~0.2.2",
    "requirejs": "~2.1.11"
  },
  "gitHead": "5d9ad6021d63aa9faa07842a436f411f5979b529",
  "main": "lib/angular-scheduler.js",
  "name": "angular-scheduler",
  "optionalDependencies": {},
  "readme": "angular-scheduler\n=================\n\nA UI widget for creating or editing repeating calendar entries. Dynamically injects HTML anwhere in an Angular app. Provides methods for converting schedule entry to and from RRule format, based on the [iCalendar RFC](http://www.ietf.org/rfc/rfc2445.txt).\n\nIntalling\n---------\n\nbower install angular-scheduler\n\n\nUsing\n-----\n\nComing soon...\n\n\nSample App\n----------\n\nAn example application is included along with a simple node based web server. With [node](http://nodejs.org) installed, run the following to start the server:\n\n    node ./scripts/web-server.js 8000\n\nVisit the sample by pointing your browser to http://localhost:8000/app/index.html\n\n\nContributing\n------------\nAfter cloning the repo, install the the bower packages listed in bower.json: \n  \n    bower install\n\nInstall the npm packages listed in package.json:\n    \n    node install\n\nInstall [Grunt](http://www.gruntjs.com) command line:\n    \n    npm install -g grunt-cli\n\nFrom the project root run the grunt command. This will execute the default steps found in Gruntfile.js, which will lint and minify the javascript and css files:\n\n    grunt\n\nYou should see output similar to the following:\n\n    Running \"jshint:uses_defaults\" (jshint) task\n    >> 2 files lint free.\n\n    Running \"uglify:my_target\" (uglify) task\n    File \"lib/angular-scheduler.min.js\" created.\n\n    Running \"less:production\" (less) task\n    File lib/angular-scheduler.min.css created.\n\nRun tests found in the ./tests directory. GetRRule.js provides a set of unit tests. Install [Karma](http://karma-runner.github.io/0.12/index.html), and launch with the folllowing:\n\n    cd test\n    karma start\n\nSetRRule.js provides end-to-end tests that run with [Protractor](https://github.com/angular/protractor). Follow the instructions to install protractor and a local selenium server (assuming you don't have access to an existing selenium server). Launch the provided sample app (as described above) in a terminal session. In a separate terminal session launch a local selenium server. The test configuration file expects the web server to run at localhost:8000 and the selenium server to run at localhost:4444. In a third session luanch the tests:\n \nSession 1:   \n    node ./scripts/web-server.js 8000\n\nSession 2:\n    webdriver-manager start\n\nSession 3:\n    cd tests\n    protractor protractorConf.js\n\n\n",
  "readmeFilename": "README.md",
  "version": "0.3.2"
}
